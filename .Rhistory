labs(title = "Nombre de maisons et d'appartements",
x = "Type de Bâtiment",
y = "Nombre") +
theme_minimal()
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 0, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 2, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 5, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 1)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
compte_types_2 <- table(Logement$Etiquette_DPE)
print(compte_types_2)
compte_df_2 <- as.data.frame(compte_types_2)
colnames(compte_df_2) <- c("Etiquette_DPE", "nombre")
ggplot(compte_df_2, aes(x = Etiquette_DPE, y = nombre, fill = Etiquette_DPE)) +
geom_bar(stat = "identity", width = 0.7) +  # Créer les bâtons
labs(title = "Répartition des étiquettes DPE",
x = "Étiquette DPE",
y = "Nombre d'occurrences") +
theme_minimal() +  # Appliquer un thème minimaliste
theme(legend.position = "none")  # Supprimer la légende
compte_df_2 <- as.data.frame(compte_types_2)
colnames(compte_df_2) <- c("Etiquette_DPE", "nombre")
ggplot(compte_df, aes(x = Etiquette_DPE, y = nombre, fill = Etiquette_DPE)) +
geom_bar(stat = "identity", width = 0.7) +  # Créer les bâtons
geom_text(aes(label = nombre), vjust = -0.5, size = 4) +  # Ajouter les nombres au-dessus des barres
labs(title = "Répartition des étiquettes DPE",
x = "Étiquette DPE",
y = "Nombre d'occurrences") +
theme_minimal() +  # Appliquer un thème minimaliste
theme(legend.position = "none")  # Supprimer la légende
compte_df_2 <- as.data.frame(compte_types_2)
colnames(compte_df_2) <- c("Etiquette_DPE", "nombre")
ggplot(compte_df_2, aes(x = Etiquette_DPE, y = nombre, fill = Etiquette_DPE)) +
geom_bar(stat = "identity", width = 0.7) +  # Créer les bâtons
geom_text(aes(label = nombre), vjust = -0.5, size = 4) +  # Ajouter les nombres au-dessus des barres
labs(title = "Répartition des étiquettes DPE",
x = "Étiquette DPE",
y = "Nombre d'occurrences") +
theme_minimal() +  # Appliquer un thème minimaliste
theme(legend.position = "none")  # Supprimer la légende
mean(Logement$Coût_total_5_usages)
a = aggregate(Coût_total_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
print(a)
ggplot(data = a, aes(x = Etiquette_DPE, y = Coût_total_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût Total par Etiquette DPE",
x = "Etiquette DPE",
y = "Moyenne du Coût Total (5 usages)") +  # Ajouter les titres et labels des axes
theme_minimal()
print("nous pouvons remarquer que plus l'étiquette de DPE est basse plus le cout total est elevé en moyennes")
#aide personnelle a la réalisation du rmarkdown
#echo : Affiche ou non le code.
#eval : Exécute ou non le code.
#warning : Affiche ou non les warnings.
#message : Affiche ou non les messages.
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_minimal() +
theme(legend.title = element_blank())
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
b = aggregate(Emission_GES_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
print(b)
ggplot(data = b, aes(x = Etiquette_DPE, y = Emission_GES_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne d'emission de GES en fonction de l'étiquette DPE",
x = "Etiquette DPE",
y = "emission GES 5 usages") +  # Ajouter les titres et labels des axes
theme_minimal()
b = aggregate(Emission_GES_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
print(b)
ggplot(data = b, aes(x = Etiquette_DPE, y = Emission_GES_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne d'emission de GES en fonction de l'étiquette DPE",
x = "Etiquette DPE",
y = "emission GES 5 usages") +  # Ajouter les titres et labels des axes
theme_minimal()
b = aggregate(Emission_GES_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
print(b)
ggplot(data = b, aes(x = Etiquette_DPE, y = Emission_GES_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne d'emission de GES en fonction de l'étiquette DPE",
x = "Etiquette DPE",
y = "emission GES 5 usages") +  # Ajouter les titres et labels des axes
theme_minimal()
c = aggregate(Coût_ECS ~ Etiquette_DPE, Logement, FUN = mean)
print(c)
ggplot(data = c, aes(x = Etiquette_DPE, y = Coût_ECS)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût ECS par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout ECS") +  # Ajouter les titres et labels des axes
theme_minimal()
#print("")
d = aggregate(Coût_chauffage ~ Etiquette_DPE, Logement, FUN = mean)
print(d)
ggplot(data = d, aes(x = Etiquette_DPE, y = Coût_chauffage)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût du chauffage par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout chauffage") +  # Ajouter les titres et labels des axes
theme_minimal()
#print("")
#idée pour demain :
#comparaison maison et appartement
#faire disparaitre le code R du knit
#je sais pas encore on verra
d = aggregate(Coût_chauffage ~ Etiquette_DPE, Logement, FUN = mean)
print(d)
ggplot(data = d, aes(x = Etiquette_DPE, y = Coût_chauffage)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût du chauffage par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout chauffage") +  # Ajouter les titres et labels des axes
theme_minimal()
#print("")
#idée pour demain :
#comparaison maison et appartement
#faire disparaitre le code R du knit
#je sais pas encore on verra
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
a = aggregate(Coût_total_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
print(a)
mean(Logement$Coût_total_5_usages)
a = aggregate(Coût_total_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
print(a)
a = aggregate(Coût_total_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
print(a)
#aide personnelle a la réalisation du rmarkdown
#echo : Affiche ou non le code.
#eval : Exécute ou non le code.
#warning : Affiche ou non les warnings.
#message : Affiche ou non les messages.
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
compte_types_2 <- table(Logement$Etiquette_DPE)
print(compte_types_2)
compte_types_2 <- table(Logement$Etiquette_DPE)
print(compte_types_2)
a = aggregate(Coût_total_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = a, aes(x = Etiquette_DPE, y = Coût_total_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût Total par Etiquette DPE",
x = "Etiquette DPE",
y = "Moyenne du Coût Total (5 usages)") +  # Ajouter les titres et labels des axes
theme_minimal()
c = aggregate(Coût_ECS ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = c, aes(x = Etiquette_DPE, y = Coût_ECS)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût ECS par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout ECS") +  # Ajouter les titres et labels des axes
theme_minimal()
#print("")
d = aggregate(Coût_chauffage ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = d, aes(x = Etiquette_DPE, y = Coût_chauffage)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût du chauffage par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout chauffage") +  # Ajouter les titres et labels des axes
theme_minimal()
#print("")
#idée pour demain :
#comparaison maison et appartement
#faire disparaitre le code R du knit
#je sais pas encore on verra
View(Logement)
View(Logement)
View(Logement)
setwd("C:/Users/irahm/OneDrive/Bureau/app r/iut_sd2_rshiny_enedis") #redirection vers le dossier qui contient le fichier logement lozère
Logement = read.csv2("Logement_Lozère.csv", sep = ";", dec = ".")
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
#aide personnelle a la réalisation du rmarkdown
#echo : Affiche ou non le code.
#eval : Exécute ou non le code.
#warning : Affiche ou non les warnings.
#message : Affiche ou non les messages.
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
compte_df_2 <- as.data.frame(compte_types_2)
colnames(compte_df_2) <- c("Etiquette_DPE", "nombre")
ggplot(compte_df_2, aes(x = Etiquette_DPE, y = nombre, fill = Etiquette_DPE)) +
geom_bar(stat = "identity", width = 0.7) +  # Créer les bâtons
geom_text(aes(label = nombre), vjust = -0.5, size = 4) +  # Ajouter les nombres au-dessus des barres
labs(title = "Répartition des étiquettes DPE",
x = "Étiquette DPE",
y = "Nombre d'occurrences") +
theme_minimal() +  # Appliquer un thème minimaliste
theme(legend.position = "none")  # Supprimer la légende
c = aggregate(Coût_ECS ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = c, aes(x = Etiquette_DPE, y = Coût_ECS)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût ECS par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout ECS") +  # Ajouter les titres et labels des axes
theme_minimal()
d = aggregate(Coût_chauffage ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = d, aes(x = Etiquette_DPE, y = Coût_chauffage)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût du chauffage par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout chauffage") +  # Ajouter les titres et labels des axes
theme_minimal()
b = aggregate(Emission_GES_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = b, aes(x = Etiquette_DPE, y = Emission_GES_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne d'emission de GES en fonction de l'étiquette DPE",
x = "Etiquette DPE",
y = "emission GES 5 usages") +  # Ajouter les titres et labels des axes
theme_minimal()
b = aggregate(Emission_GES_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = b, aes(x = Etiquette_DPE, y = Emission_GES_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne d'emission de GES en fonction de l'étiquette DPE",
x = "Etiquette DPE",
y = "emission GES 5 usages") +  # Ajouter les titres et labels des axes
theme_minimal()
#aide personnelle a la réalisation du rmarkdown
#echo : Affiche ou non le code.
#eval : Exécute ou non le code.
#warning : Affiche ou non les warnings.
#message : Affiche ou non les messages.
if(!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
setwd("C:/Users/irahm/OneDrive/Bureau/app r/iut_sd2_rshiny_enedis") #redirection vers le dossier qui contient le fichier logement lozère
Logement = read.csv2("Logement_Lozère.csv", sep = ";", dec = ".")
compte_types <- table(Logement$Type_bâtiment)
print(compte_types)
# Transformer le tableau en dataframe
compte_df <- as.data.frame(compte_types)
colnames(compte_df) <- c("type_batiment", "nombre")  # Renommer les colonnes
# Calculer les pourcentages
compte_df$fraction <- compte_df$nombre / sum(compte_df$nombre)
compte_df$percentage <- round(compte_df$fraction * 100, 1)
# Créer un pie chart avec pourcentages
ggplot(compte_df, aes(x = "", y = nombre, fill = type_batiment)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y") +
geom_text(aes(label = paste0(percentage, "%")), position = position_stack(vjust = 0.5)) +
labs(title = "Répartition des types de bâtiments",
x = NULL,
y = NULL) +
theme_void() +
theme(legend.title = element_blank())
compte_types_2 <- table(Logement$Etiquette_DPE)
print(compte_types_2)
compte_df_2 <- as.data.frame(compte_types_2)
colnames(compte_df_2) <- c("Etiquette_DPE", "nombre")
ggplot(compte_df_2, aes(x = Etiquette_DPE, y = nombre, fill = Etiquette_DPE)) +
geom_bar(stat = "identity", width = 0.7) +  # Créer les bâtons
geom_text(aes(label = nombre), vjust = -0.5, size = 4) +  # Ajouter les nombres au-dessus des barres
labs(title = "Répartition des étiquettes DPE",
x = "Étiquette DPE",
y = "Nombre d'occurrences") +
theme_minimal() +  # Appliquer un thème minimaliste
theme(legend.position = "none")  # Supprimer la légende
mean(Logement$Coût_total_5_usages)
a = aggregate(Coût_total_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = a, aes(x = Etiquette_DPE, y = Coût_total_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût Total par Etiquette DPE",
x = "Etiquette DPE",
y = "Moyenne du Coût Total (5 usages)") +  # Ajouter les titres et labels des axes
theme_minimal()
c = aggregate(Coût_ECS ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = c, aes(x = Etiquette_DPE, y = Coût_ECS)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût ECS par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout ECS") +  # Ajouter les titres et labels des axes
theme_minimal()
d = aggregate(Coût_chauffage ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = d, aes(x = Etiquette_DPE, y = Coût_chauffage)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne du Coût du chauffage par Etiquette DPE",
x = "Etiquette DPE",
y = "moyenne cout chauffage") +  # Ajouter les titres et labels des axes
theme_minimal()
b = aggregate(Emission_GES_5_usages ~ Etiquette_DPE, Logement, FUN = mean)
ggplot(data = b, aes(x = Etiquette_DPE, y = Emission_GES_5_usages)) +
geom_bar(stat = "identity", fill = "lightblue") +  # Créer les barres avec les moyennes
labs(title = "Moyenne d'emission de GES en fonction de l'étiquette DPE",
x = "Etiquette DPE",
y = "emission GES 5 usages") +  # Ajouter les titres et labels des axes
theme_minimal()
correlation = cor(x = Logement$Emission_GES_ECS,
y = Logement$Coût_total_5_usages,
method = "spearman")
print(correlation)
# Création du diagramme de dispersion
plot(Logement$Emission_GES_ECS, Logement$Coût_total_5_usages,
xlab = "Emission GES ECS", ylab = "Coût total 5 usages",
main = "Diagramme de dispersion")
correlation = cor(x = Logement$Emission_GES_5_usages,
y = Logement$Coût_total_5_usages,
method = "spearman")
print(correlation)
# Création du diagramme de dispersion
plot(Logement$Emission_GES_5_usages, Logement$Coût_total_5_usages,
xlab = "Emission GES ECS", ylab = "Coût total 5 usages",
main = "Diagramme de dispersion")
# Création du diagramme de dispersion
plot(Logement$Emission_GES_5_usages, Logement$Coût_total_5_usages,
xlab = "Emission GES ECS", ylab = "Coût total 5 usages",
main = "Diagramme de dispersion")
# Ajout de la ligne de tendance
abline(lm(Logement$Coût_total_5_usages ~ Logement$Emission_GES_5_usages),
col = "red", lwd = 2)
# Ajout de la légende pour la corrélation de rang de Spearman
legend("topright", legend = paste("Corrélation de rang de Spearman =", round(correlation, 3)),
bty = "n")
# Création du diagramme de dispersion
plot(Logement$Emission_GES_5_usages, Logement$Coût_total_5_usages,
xlab = "Emission GES ECS", ylab = "Coût total 5 usages",
main = "Diagramme de dispersion")
# Ajout de la ligne de tendance
abline(lm(Logement$Coût_total_5_usages ~ Logement$Emission_GES_5_usages),
col = "red", lwd = 2)
# Ajout de la légende pour la corrélation de rang de Spearman
legend("topright", legend = paste("Coefficient de Corrélation =", round(correlation, 3)),
bty = "n")
correlation = cor(x = Logement$Emission_GES_5_usages,
y = Logement$Coût_total_5_usages,
method = "spearman")
# Création du diagramme de dispersion
plot(Logement$Emission_GES_5_usages, Logement$Coût_total_5_usages,
xlab = "Emission GES ECS", ylab = "Coût total 5 usages",
main = "Diagramme de dispersion")
# Ajout de la ligne de tendance
abline(lm(Logement$Coût_total_5_usages ~ Logement$Emission_GES_5_usages),
col = "red", lwd = 2)
# Ajout de la légende pour la corrélation de rang de Spearman
legend("topright", legend = paste("Coefficient de Corrélation =", round(correlation, 3)),
bty = "n")
correlation = cor(x = Logement$Emission_GES_5_usages,
y = Logement$Coût_total_5_usages,
method = "spearman")
# Création du diagramme de dispersion
plot(Logement$Emission_GES_5_usages, Logement$Coût_total_5_usages,
xlab = "Emission GES ECS", ylab = "Coût total 5 usages",
main = "régression linéaire")
# Ajout de la ligne de tendance
abline(lm(Logement$Coût_total_5_usages ~ Logement$Emission_GES_5_usages),
col = "red", lwd = 2)
# Ajout de la légende pour la corrélation de rang de Spearman
legend("topright", legend = paste("Coefficient de Corrélation =", round(correlation, 3)),
bty = "n")
